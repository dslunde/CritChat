# Uncomment this line to define a global platform for your project
platform :ios, '13.0'

# CocoaPods' acknowledgement plugin is causing issues with Flutter's build system.
# We recommend turning it off until a solution is available.
# See https://github.com/CocoaPods/CocoaPods/issues/9574 for more details.
#
ENV['COCOAPODS_DISABLE_STATS'] = 'true'

project 'Runner', {
  'Debug' => :debug,
  'Profile' => :release,
  'Release' => :release,
}

def flutter_root
  generated_xcode_build_settings_path = File.expand_path(File.join('..', 'Flutter', 'Generated.xcconfig'), __FILE__)
  unless File.exist?(generated_xcode_build_settings_path)
    raise "#{generated_xcode_build_settings_path} must exist. If you're running pod install manually, make sure flutter pub get has been run first."
  end

  File.read(generated_xcode_build_settings_path).each_line do |line|
    matches = /FLUTTER_ROOT=(.*)/.match(line)
    return matches[1].strip if matches
  end
  raise "FLUTTER_ROOT not found in #{generated_xcode_build_settings_path}. Try deleting Generated.xcconfig, then running flutter pub get"
end

require File.expand_path(File.join('packages', 'flutter_tools', 'bin', 'podhelper'), flutter_root)

flutter_ios_podfile_setup

target 'Runner' do
  use_frameworks!
  use_modular_headers!

  flutter_install_all_ios_pods File.dirname(File.realpath(__FILE__))
end

post_install do |installer|
  installer.pods_project.targets.each do |target|
    flutter_additional_ios_build_settings(target)
    target.build_configurations.each do |config|
      config.build_settings['IPHONEOS_DEPLOYMENT_TARGET'] = '13.0'
      
      # Aggressive fix for Xcode 16.4+ clang 17 compatibility
      config.build_settings['OTHER_CFLAGS'] = '-Wno-error=unknown-warning-option -Wno-error=unused-command-line-argument-hard-error-in-future -Wno-everything'
      config.build_settings['OTHER_CPLUSPLUSFLAGS'] = '-Wno-error=unknown-warning-option -Wno-error=unused-command-line-argument-hard-error-in-future -Wno-everything'
      config.build_settings['GCC_WARN_INHIBIT_ALL_WARNINGS'] = 'YES'
      config.build_settings['WARNING_CFLAGS'] = '-Wno-everything'
      config.build_settings['GCC_TREAT_WARNINGS_AS_ERRORS'] = 'NO'
      config.build_settings['CLANG_WARN_DEPRECATED_OBJC_IMPLEMENTATIONS'] = 'NO'
      config.build_settings['CLANG_WARN_OBJC_IMPLICIT_RETAIN_SELF'] = 'NO'
      
      # Remove all problematic compiler flags completely
      ['COMPILER_FLAGS', 'OTHER_CFLAGS', 'OTHER_CPLUSPLUSFLAGS'].each do |flag_key|
        flags = config.build_settings[flag_key]
        if flags.is_a?(String)
          config.build_settings[flag_key] = flags.gsub(/-G\w*\s*/, '').gsub(/\s+/, ' ').strip
        elsif flags.is_a?(Array)
          config.build_settings[flag_key] = flags.reject { |f| f.to_s.include?('-G') }
        end
      end
    end
  end
end 